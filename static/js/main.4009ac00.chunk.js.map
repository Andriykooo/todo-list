{"version":3,"sources":["components/TodoList/TodoList.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["TodoList","todos","setTodos","useState","addTodoField","setAddTodoField","map","todo","type","checked","completed","onChange","prevState","completedTodo","id","text","onClick","filter","currentTodo","onSubmit","event","preventDefault","prevTodos","length","name","placeholder","value","target","App","searchField","setSearchField","filterTodoBy","setFilterTodoBy","preparedTodos","includes","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAEaA,EAAW,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAChC,EAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAEA,OACE,qCACE,6BACGJ,EAAMK,KAAI,SAACC,GAAD,OACT,+BACE,gCACE,uBACEC,KAAK,WACLC,QAASF,EAAKG,UACdC,SAAU,WACRT,GAAS,SAACU,GAAD,OAAeA,EACrBN,KAAI,SAACO,GAAD,OAAoBA,EAAcC,KAAOP,EAAKO,GAA1B,2BAChBD,GADgB,IACDH,WAAYH,EAAKG,YACrCG,aAIXN,EAAKQ,KACN,wBACEP,KAAK,SACLQ,QAAS,WACPd,EAASD,EACNgB,QAAO,SAACC,GAAD,OAAiBX,EAAKO,KAAOI,EAAYJ,QAJvD,iBAdOP,EAAKO,SA0BlB,uBACEK,SAAU,SAACC,GACTA,EAAMC,iBAEDjB,IAILF,GAAS,SAACoB,GAAD,4BAEFA,GAFE,CAGL,CACEP,KAAMX,EACNM,WAAW,EACXI,GAAIQ,EAAUC,OAAS,QAI7BlB,EAAgB,MAlBpB,UAqBE,gCACE,uBACEG,KAAK,OACLgB,KAAK,OACLC,YAAY,WACZC,MAAOtB,EACPO,SAAU,SAACS,GACTf,EAAgBe,EAAMO,OAAOD,YAInC,wBAAQlB,KAAK,SAAb,wBCKOoB,MAlEf,WACE,MAA0BzB,mBAAS,IAAnC,mBAAOF,EAAP,KAAcC,EAAd,KACA,EAAsCC,mBAAS,IAA/C,mBAAO0B,EAAP,KAAoBC,EAApB,KACA,EAAwC3B,mBAAS,IAAjD,mBAAO4B,EAAP,KAAqBC,EAArB,KAEIC,EAAgBhC,EAAMgB,QAAO,SAACV,GAChC,OAAQwB,GACN,IAAK,SACH,OAA0B,IAAnBxB,EAAKG,UACd,IAAK,YACH,OAA0B,IAAnBH,EAAKG,UACd,QACE,OAAOH,MAMb,OAFA0B,EAAgBA,EAAchB,QAAO,SAACV,GAAD,OAAUA,EAAKQ,KAAKmB,SAASL,MAGhE,yBAASM,UAAU,OAAnB,SACE,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,aAAd,kBACA,qBAAKA,UAAU,cAAf,SACE,+BACE,gCACE,uBACE3B,KAAK,OACLgB,KAAK,SACLC,YAAY,SACZC,MAAOG,EACPlB,SAAU,SAACS,GACTU,EAAeV,EAAMO,OAAOD,gBAMtC,wBACElB,KAAK,SACLQ,QAAS,kBAAMgB,EAAgB,QAFjC,iBAMA,wBACExB,KAAK,SACLQ,QAAS,kBAAMgB,EAAgB,WAFjC,oBAMA,wBACExB,KAAK,SACLQ,QAAS,kBAAMgB,EAAgB,cAFjC,uBAMA,qBAAKG,UAAU,YAAf,SACE,cAAC,EAAD,CACElC,MAAOgC,EACP/B,SAAUA,YClDPkC,EAdS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAEnB,IADLC,EACI,EADJA,OAAQC,EACJ,EADIA,OAAQC,EACZ,EADYA,OAAQC,EACpB,EADoBA,OAAQC,EAC5B,EAD4BA,QAEhCJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.4009ac00.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nexport const TodoList = ({ todos, setTodos }) => {\n  const [addTodoField, setAddTodoField] = useState('');\n\n  return (\n    <>\n      <ul>\n        {todos.map((todo) => (\n          <li key={todo.id}>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={todo.completed}\n                onChange={() => {\n                  setTodos((prevState) => prevState\n                    .map((completedTodo) => (completedTodo.id === todo.id\n                      ? { ...completedTodo, completed: !todo.completed }\n                      : completedTodo)));\n                }}\n              />\n            </label>\n            {todo.text}\n            <button\n              type=\"button\"\n              onClick={() => {\n                setTodos(todos\n                  .filter((currentTodo) => todo.id !== currentTodo.id));\n              }}\n            >\n              X\n            </button>\n          </li>\n        ))}\n      </ul>\n      <form\n        onSubmit={(event) => {\n          event.preventDefault();\n\n          if (!addTodoField) {\n            return;\n          }\n\n          setTodos((prevTodos) => (\n            [\n              ...prevTodos,\n              {\n                text: addTodoField,\n                completed: false,\n                id: prevTodos.length + 1,\n              },\n            ]\n          ));\n          setAddTodoField('');\n        }}\n      >\n        <label>\n          <input\n            type=\"text\"\n            name=\"todo\"\n            placeholder=\"Add todo\"\n            value={addTodoField}\n            onChange={(event) => {\n              setAddTodoField(event.target.value);\n            }}\n          />\n        </label>\n        <button type=\"submit\">Add</button>\n      </form>\n    </>\n  );\n};\n","import React, { useState } from 'react';\n\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [searchField, setSearchField] = useState('');\n  const [filterTodoBy, setFilterTodoBy] = useState('');\n\n  let preparedTodos = todos.filter((todo) => {\n    switch (filterTodoBy) {\n      case 'active':\n        return todo.completed === false;\n      case 'completed':\n        return todo.completed === true;\n      default:\n        return todo;\n    }\n  });\n\n  preparedTodos = preparedTodos.filter((todo) => todo.text.includes(searchField));\n\n  return (\n    <section className=\"todo\">\n      <div className=\"todo__wrapper\">\n        <h1 className=\"app__title\">TODO</h1>\n        <div className=\"todo-search\">\n          <form>\n            <label>\n              <input\n                type=\"text\"\n                name=\"search\"\n                placeholder=\"Search\"\n                value={searchField}\n                onChange={(event) => {\n                  setSearchField(event.target.value);\n                }}\n              />\n            </label>\n          </form>\n        </div>\n        <button\n          type=\"button\"\n          onClick={() => setFilterTodoBy('all')}\n        >\n          All\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setFilterTodoBy('active')}\n        >\n          Active\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setFilterTodoBy('completed')}\n        >\n          Completed\n        </button>\n        <div className=\"todo-list\">\n          <TodoList\n            todos={preparedTodos}\n            setTodos={setTodos}\n          />\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}